Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/UnitTest.sol


TypeError: Wrong argument count for function call: 4 arguments given but expected 1.
  --> contracts/UnitTest.sol:16:22:
   |
16 |         Assert.equal(insurancePolicy.isCovered(true, true, true, true), true, "Test Case 1 Failed");
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


TypeError: Wrong argument count for function call: 4 arguments given but expected 1.
  --> contracts/UnitTest.sol:19:22:
   |
19 |         Assert.equal(insurancePolicy.isCovered(false, true, true, true), false, "Test Case 2 Failed");
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


TypeError: Wrong argument count for function call: 4 arguments given but expected 1.
  --> contracts/UnitTest.sol:22:22:
   |
22 |         Assert.equal(insurancePolicy.isCovered(true, false, true, true), false, "Test Case 3 Failed");
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


TypeError: Wrong argument count for function call: 4 arguments given but expected 1.
  --> contracts/UnitTest.sol:25:22:
   |
25 |         Assert.equal(insurancePolicy.isCovered(true, true, false, true), false, "Test Case 4 Failed");
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


TypeError: Wrong argument count for function call: 4 arguments given but expected 1.
  --> contracts/UnitTest.sol:28:22:
   |
28 |         Assert.equal(insurancePolicy.isCovered(true, true, true, false), false, "Test Case 5 Failed");
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


TypeError: Invalid type for argument in function call. Invalid implicit conversion from bool to struct InsurancePolicy.Beneficiary memory requested.
  --> contracts/UnitTest.sol:33:53:
   |
33 |         Assert.equal(insurancePolicy.isNurseCovered(true), true, "Test Case 1 Failed");
   |                                                     ^^^^


TypeError: Invalid type for argument in function call. Invalid implicit conversion from bool to struct InsurancePolicy.Beneficiary memory requested.
  --> contracts/UnitTest.sol:36:53:
   |
36 |         Assert.equal(insurancePolicy.isNurseCovered(false), false, "Test Case 2 Failed");
   |                                                     ^^^^^


Error HH600: Compilation failed
For more info go to https://hardhat.org/HH600 or run Hardhat with --show-stack-traces

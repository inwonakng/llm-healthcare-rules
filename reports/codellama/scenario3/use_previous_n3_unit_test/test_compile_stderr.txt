Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/SmartContract.sol


Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/UnitTest.sol


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:10:9:
   |
10 |         assertTrue(hasPartACoverage(), "Patient does not have Part A coverage");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:10:20:
   |
10 |         assertTrue(hasPartACoverage(), "Patient does not have Part A coverage");
   |                    ^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:15:9:
   |
15 |         assertTrue(hasPartBCoverage(), "Patient does not have Part B coverage");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:15:20:
   |
15 |         assertTrue(hasPartBCoverage(), "Patient does not have Part B coverage");
   |                    ^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:20:9:
   |
20 |         assertTrue(hasOriginalMedicareCoverage(), "Patient does not have Original Medicare coverage");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:20:20:
   |
20 |         assertTrue(hasOriginalMedicareCoverage(), "Patient does not have Original Medicare coverage");
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:25:9:
   |
25 |         assertTrue(hasESRDCoverage(), "Patient does not have ESRD coverage");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:25:20:
   |
25 |         assertTrue(hasESRDCoverage(), "Patient does not have ESRD coverage");
   |                    ^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:30:9:
   |
30 |         assertTrue(isEligibleForImmunosuppressiveDrugBenefit(), "Patient is not eligible for the immunosuppressive drug benefit");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:30:20:
   |
30 |         assertTrue(isEligibleForImmunosuppressiveDrugBenefit(), "Patient is not eligible for the immunosuppressive drug benefit");
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:35:9:
   |
35 |         assertTrue(canSignUpForBenefit(), "Patient cannot sign up for the immunosuppressive drug benefit");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:35:20:
   |
35 |         assertTrue(canSignUpForBenefit(), "Patient cannot sign up for the immunosuppressive drug benefit");
   |                    ^^^^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:40:9:
   |
40 |         assertEquals(premiumAndDeductible(), (97.10, 226), "Incorrect premium and deductible amount");
   |         ^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:40:22:
   |
40 |         assertEquals(premiumAndDeductible(), (97.10, 226), "Incorrect premium and deductible amount");
   |                      ^^^^^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:45:9:
   |
45 |         assertTrue(isDrugCovered(), "Patient's immunosuppressive drugs are not covered");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:45:20:
   |
45 |         assertTrue(isDrugCovered(), "Patient's immunosuppressive drugs are not covered");
   |                    ^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:50:9:
   |
50 |         assertTrue(hasMetDeductible(), "Patient has not met the deductible");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:50:20:
   |
50 |         assertTrue(hasMetDeductible(), "Patient has not met the deductible");
   |                    ^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:55:9:
   |
55 |         assertEquals(copayment(), 0.2, "Incorrect copayment amount");
   |         ^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:55:22:
   |
55 |         assertEquals(copayment(), 0.2, "Incorrect copayment amount");
   |                      ^^^^^^^^^


Error HH600: Compilation failed
For more info go to https://hardhat.org/HH600 or run Hardhat with --show-stack-traces

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/SmartContract.sol


Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/UnitTest.sol


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:10:9:
   |
10 |         assertTrue(hasPartACoverage(), "Policyholder does not have Part A coverage");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:10:20:
   |
10 |         assertTrue(hasPartACoverage(), "Policyholder does not have Part A coverage");
   |                    ^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:15:9:
   |
15 |         assertTrue(hasPartBCoverage(), "Policyholder does not have Part B coverage");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:15:20:
   |
15 |         assertTrue(hasPartBCoverage(), "Policyholder does not have Part B coverage");
   |                    ^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:20:9:
   |
20 |         assertTrue(hasMedicareDrugCoverage(), "Policyholder does not have Medicare drug coverage");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:20:20:
   |
20 |         assertTrue(hasMedicareDrugCoverage(), "Policyholder does not have Medicare drug coverage");
   |                    ^^^^^^^^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:25:9:
   |
25 |         assertTrue(hasESRDCoverageEnded(), "Policyholder's Medicare coverage has not ended");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:25:20:
   |
25 |         assertTrue(hasESRDCoverageEnded(), "Policyholder's Medicare coverage has not ended");
   |                    ^^^^^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:30:9:
   |
30 |         assertTrue(isEligibleForBenefit(), "Policyholder is not eligible for the immunosuppressive drug benefit");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:30:20:
   |
30 |         assertTrue(isEligibleForBenefit(), "Policyholder is not eligible for the immunosuppressive drug benefit");
   |                    ^^^^^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:35:9:
   |
35 |         assertTrue(canSignUpForBenefit(), "Policyholder cannot sign up for the immunosuppressive drug benefit");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:35:20:
   |
35 |         assertTrue(canSignUpForBenefit(), "Policyholder cannot sign up for the immunosuppressive drug benefit");
   |                    ^^^^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:40:9:
   |
40 |         assertTrue(hasPaidPremiumAndDeductible(), "Policyholder has not paid the premium and deductible");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:40:20:
   |
40 |         assertTrue(hasPaidPremiumAndDeductible(), "Policyholder has not paid the premium and deductible");
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:45:9:
   |
45 |         assertTrue(hasImmunosuppressiveDrugCoverageOnly(), "Immunosuppressive drug benefit covers other items or services");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:45:20:
   |
45 |         assertTrue(hasImmunosuppressiveDrugCoverageOnly(), "Immunosuppressive drug benefit covers other items or services");
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:50:9:
   |
50 |         assertTrue(isNotFullHealthCoverage(), "Immunosuppressive drug benefit is a substitute for full health coverage");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:50:20:
   |
50 |         assertTrue(isNotFullHealthCoverage(), "Immunosuppressive drug benefit is a substitute for full health coverage");
   |                    ^^^^^^^^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:55:9:
   |
55 |         assertTrue(hasMetDeductible(), "Policyholder has not met the deductible");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:55:20:
   |
55 |         assertTrue(hasMetDeductible(), "Policyholder has not met the deductible");
   |                    ^^^^^^^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:60:9:
   |
60 |         assertTrue(hasPaidCopay(), "Policyholder has not paid the copay");
   |         ^^^^^^^^^^


DeclarationError: Undeclared identifier.
  --> contracts/UnitTest.sol:60:20:
   |
60 |         assertTrue(hasPaidCopay(), "Policyholder has not paid the copay");
   |                    ^^^^^^^^^^^^


Error HH600: Compilation failed
For more info go to https://hardhat.org/HH600 or run Hardhat with --show-stack-traces

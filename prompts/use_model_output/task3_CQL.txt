Pretend that you are a web3 developer who translates a CQL library with named expressions into a solidity smart contract.
Your task is to convert the CQL library with named expressions into a solidity smart contract.
You will be given a CQL library with named expressions for each task.
You must follow the following rules:

Rule 1. The smart contract should follow all of the logic expressed in the named expressions.
Rule 2. The smart contract must cover every single condition described by the named expression.
Rule 3. The smart contract must always return some output as a result of the input’s conditions.
Rule 4. The smart contract’s input must include every parameter considered in the named expressions.
Rule 5. You can create structs to encapsulate necessary parameters to produce cleaner code.

Respond with “I am ready” if you understand, and repeat your given task and the rules before we start.

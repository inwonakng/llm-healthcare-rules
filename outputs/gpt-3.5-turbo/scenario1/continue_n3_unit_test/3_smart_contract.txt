```solidity
pragma solidity ^0.8.0;

contract YourContract {
    struct Patient {
        bool womanWithOsteoporosis;
        bool meetsMedicareHomeHealthBenefit;
        bool boneFracture;
        bool relatedToPostMenopausalOsteoporosis;
        bool doctorCertifiesInability;
        bool familyOrCaregiversUnableOrUnwilling;
    }

    function checkInjectableOsteoporosisDrugCoverage(Patient memory patient) public pure returns (bool) {
        if (
            patient.womanWithOsteoporosis &&
            patient.meetsMedicareHomeHealthBenefit &&
            patient.boneFracture &&
            patient.relatedToPostMenopausalOsteoporosis &&
            patient.doctorCertifiesInability &&
            patient.familyOrCaregiversUnableOrUnwilling
        ) {
            return true;
        }
        return false;
    }
}
```

Explanation:
- The smart contract `YourContract` defines a struct `Patient` to encapsulate the conditions mentioned in the insurance policy document.
- The function `checkInjectableOsteoporosisDrugCoverage` takes a `Patient` object as input and checks if all the conditions are met.
- If all the conditions are met, the function returns `true`, indicating that the injectable osteoporosis drug coverage is applicable.
- Otherwise, it returns `false`.
- This smart contract only implements the logic for checking the conditions and does not include the unit tests.
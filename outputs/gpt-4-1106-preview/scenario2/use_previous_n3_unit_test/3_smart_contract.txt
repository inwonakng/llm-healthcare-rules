Based on the provided summary, N3 logic rules, and Solidity unit tests, here is a Solidity smart contract that implements the insurance policy for IVIG coverage:

```solidity
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract IVIGCoverageContract {
    // Define a struct to encapsulate patient information
    struct Patient {
        bool hasPrimaryImmuneDeficiency;
        bool hasDoctorApproval;
        bool receivesTreatmentAtHome;
    }

    // Define a struct to encapsulate insurance information
    struct Insurance {
        bool isMedicarePartB;
    }

    // Check if the patient is eligible for IVIG coverage
    function isEligibleForCoverage(Patient memory patient) public pure returns (bool) {
        return patient.hasPrimaryImmuneDeficiency && patient.hasDoctorApproval && patient.receivesTreatmentAtHome;
    }

    // Check if Medicare Part B covers the medication cost for an eligible patient
    function coversMedicationCost(Patient memory patient, Insurance memory insurance) public pure returns (bool) {
        bool eligibleForCoverage = isEligibleForCoverage(patient);
        return eligibleForCoverage && patient.receivesTreatmentAtHome && insurance.isMedicarePartB;
    }

    // Check if Medicare Part B does not cover additional items or services
    function doesNotCoverAdditionalItemsOrServices(Patient memory patient, Insurance memory insurance) public pure returns (bool) {
        bool eligibleForCoverage = isEligibleForCoverage(patient);
        return eligibleForCoverage && patient.receivesTreatmentAtHome && insurance.isMedicarePartB;
    }
}
```

This contract includes functions that determine eligibility for IVIG coverage, whether Medicare Part B covers the medication cost, and whether it does not cover additional items or services. The contract uses `pure` functions since the logic does not require any state changes or access to contract state variables.

Please note that the actual implementation of the contract may require additional functions and state management to handle real-world scenarios, such as storing patient and insurance information, handling updates to policies, and integrating with other systems. The provided contract is a simplified version based on the given summary and logic rules.
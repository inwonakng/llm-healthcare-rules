Certainly! Below is a Solidity smart contract that implements the conditions described in the insurance policy document and its summary. This contract includes functions that determine whether IVIG is covered based on the patient's condition and whether it is administered at home.

```solidity
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract IVIGCoverageContract {
    // Define a struct to encapsulate patient information and test parameters
    struct PatientInfo {
        bool hasPrimaryImmuneDeficiency;
        bool isIVIGMedicallyAppropriate;
        bool isAtHome;
    }

    // Function to check if IVIG is covered based on the patient's information
    function isIVIGCovered(PatientInfo memory patient) public pure returns (bool) {
        // Check all conditions for IVIG coverage
        return patient.hasPrimaryImmuneDeficiency &&
               patient.isIVIGMedicallyAppropriate &&
               patient.isAtHome;
    }

    // Function to check if Medicare Part B covers related items and services
    function doesMedicareCoverRelatedItemsAndServices(PatientInfo memory patient) public pure returns (bool) {
        // According to the policy, Medicare Part B does not cover related items and services
        return false;
    }
}
```

This contract provides two functions:

1. `isIVIGCovered`: Takes a `PatientInfo` struct as input and returns `true` if all conditions for IVIG coverage are met (the patient has a primary immune deficiency, it is medically appropriate to receive IVIG at home, and the IVIG is provided at home).

2. `doesMedicareCoverRelatedItemsAndServices`: Also takes a `PatientInfo` struct as input but always returns `false`, as per the policy that Medicare Part B does not cover other items and services related to the administration of IVIG at home.

This contract can be used in conjunction with the unit tests provided earlier to ensure that the contract behaves as expected according to the insurance policy document.
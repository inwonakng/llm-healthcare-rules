Here's a Solidity smart contract that translates the given natural language text into code:

```solidity
pragma solidity ^0.8.0;

contract IVIGCoverage {
    struct Patient {
        bool hasPrimaryImmuneDeficiency; // Diagnosis of primary immune deficiency disease
        bool requiresHomeTreatment; // Medically appropriate for home treatment
        bool hasMedicarePartB; // Medicare Part B coverage
    }

    function isIVIGCoverageProvided(
        bool hasPrimaryImmuneDeficiency,
        bool requiresHomeTreatment,
        bool hasMedicarePartB
    ) public pure returns (bool) {
        if (
            hasPrimaryImmuneDeficiency &&
            requiresHomeTreatment &&
            hasMedicarePartB
        ) {
            return true;
        }
        
        return false;
    }
}
```

Explanation:
- The smart contract defines a struct called `Patient` to represent the necessary parameters for determining IVIG coverage.
- The `isIVIGCoverageProvided` function takes in the required parameters and returns a boolean indicating whether IVIG coverage is provided or not.
- According to the natural language text, IVIG coverage is provided if the patient has a diagnosis of primary immune deficiency disease (`hasPrimaryImmuneDeficiency`), it is medically appropriate for the patient to receive IVIG at home (`requiresHomeTreatment`), and the patient has Medicare Part B coverage (`hasMedicarePartB`).
- The function checks if all the conditions are met and returns `true` if they are, otherwise `false`.
// Defining the necessary structs
struct Diagnosis {
  bool isPrimaryImmuneDeficiencyDisease;
}

struct Decision {
  bool isMedicallyAppropriateDoctorDecision;
}

struct Treatment {
  bool isIVIGInHome;
}

struct Cost {
  bool isIVIGCost;
}

struct Service {
  bool isOtherItemsAndServices;
}

// Defining the Contract
contract MedicareCoverage {
  // Defining the necessary variables
  Diagnosis public diagnosis;
  Decision public decision;
  Treatment public treatment;
  Cost public cost;
  Service public service;

  // Defining the constructor to initialize the variables
  constructor(bool _isPrimaryImmuneDeficiencyDisease, bool _isMedicallyAppropriateDoctorDecision, bool _isIVIGInHome, bool _isIVIGCost, bool _isOtherItemsAndServices) {
    diagnosis.isPrimaryImmuneDeficiencyDisease = _isPrimaryImmuneDeficiencyDisease;
    decision.isMedicallyAppropriateDoctorDecision = _isMedicallyAppropriateDoctorDecision;
    treatment.isIVIGInHome = _isIVIGInHome;
    cost.isIVIGCost = _isIVIGCost;
    service.isOtherItemsAndServices = _isOtherItemsAndServices;
  }

  // Defining the function to check if Medicare covers the diagnosis
  function isDiagnosisCoveredByMedicare() public view returns(bool) {
    return diagnosis.isPrimaryImmuneDeficiencyDisease;
  }

  // Defining the function to check if the decision is medically appropriate
  function isDecisionMedicallyAppropriate() public view returns(bool) {
    return decision.isMedicallyAppropriateDoctorDecision;
  }

  // Defining the function to check if IVIG cost is covered by Medicare
  function isIVIGCostCoveredByMedicare() public view returns(bool) {
    return cost.isIVIGCost;
  }

  // Defining the function to check if Other Items and Services are not covered by PartB
  function areOtherItemsAndServicesNotCoveredByPartB() public view returns(bool) {
    return service.isOtherItemsAndServices;
  }

  // Defining the function to get the final decision based on the conditions
  function getFinalDecision() public view returns(string memory) {
    if(diagnosis.isPrimaryImmuneDeficiencyDisease && decision.isMedicallyAppropriateDoctorDecision && cost.isIVIGCost && !service.isOtherItemsAndServices) {
      return "IVIG In-Home treatment will be covered by Medicare";
    }
    else {
      return "IVIG In-Home treatment will not be covered by Medicare";
    }
  }
}

// Creating an example instance of the contract
MedicareCoverage mc = new MedicareCoverage(true, true, true, true, false);
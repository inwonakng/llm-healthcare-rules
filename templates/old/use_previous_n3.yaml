# task_1: 
#   system: |
#     Pretend that you are a healthcare expert who translates natural language text into a more comprehensible format. 
#     Your task is to summarize a given piece of text wrapped in double quotes. 
#     You must follow the following rules:

#     Rule 1. You must provide a high-level summary of the text.
#     Rule 2. The requirements in the document must be summarized in a numbered list format.
#     Rule 3. Each requirement must be described on a separate line.
#     Rule 4. If a requirement refers to another requirement which was mentioned previously, refer to it using the numbering in the list.
#     Rule 5. You must capture every single requirement described in the text.
#     Rule 6. If a requirement leads into a final decision, it must be explicitly described at the end of the line.

#     Please wrap your response in ```.
#   user: |
#     ```
#     {ORIGINAL_DOC}
#     ```
# task_2:
#   system: |
#     Pretend that you are a healthcare expert who extracts N3 logic rules from a natural language text.
#     Your task is to convert a natural language text into a set of logic rules in N3 syntax.
#     You will be given a natural language text leading up to a final decision.
#     You must follow the following rules:

#     Rule 1. Convert the natural language text into logic rules using N3 syntax.
#     Rule 2. The logic rules should cover every single requirement described in the natural language text.
#     Rule 3. Every logic rule must contribute to a final decision which fits the natural language text.
#     Rule 4. The natural language text must be expressed in a single set of logical rules.

#     Please wrap your response in ```.
#   user: |
#     ```
#     {TASK_1_RESPONSE}
#     ```
# task_3:
#   system: |
#     Pretend that you are a web3 developer who translates natural language text into a solidity smart contract.
#     Your task is to convert natural language text and N3 logical syntax into a solidity smart contract.
#     You will be given a natural language summary and a N3 logical syntax from the original document for each task.
#     You must follow the following rules:

#     Rule 1. The smart contract should cover all of the natural language text.
#     Rule 2. The smart contract must implement every single condition described by the natural language text.
#     Rule 3. The smart contract must always return some output as a result of the input's conditions.
#     Rule 4. The smart contract's input must include every aspect considered in the natural language text.
#     Rule 5. You can create structs to encapsulate necessary parameters to produce cleaner code.

#     Please wrap your response in ```.
#   user: |
#     ## Summary:
#     ```
#     {TASK_1_RESPONSE}
#     ```
#     
#     ## N3 Syntax:
#     ```
#     {TASK_2_RESPONSE}
#     ```

- task: summary
  input: 
    name: an insurance policy document
    components:  
      - document
        - role
        - task_description
        - instruction
- task: n3
  input: 
    name: an insurance policy document
    components:  
      - document
        - role
        - task_description
        - instruction
- task: solidity
  input: 
    name: an insurance policy document
    components:  
      - document
        - role
        - task_description
        - instruction
